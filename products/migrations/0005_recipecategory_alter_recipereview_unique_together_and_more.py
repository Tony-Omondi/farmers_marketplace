# Generated by Django 5.2.4 on 2025-10-16 13:09

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0004_alter_recipe_description_and_more'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RecipeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Recipe Categories',
                'ordering': ['name'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='recipereview',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='recipereview',
            name='recipe',
        ),
        migrations.RemoveField(
            model_name='recipereview',
            name='user',
        ),
        migrations.AlterModelOptions(
            name='recipe',
            options={'ordering': ['-created_at']},
        ),
        migrations.RemoveField(
            model_name='recipe',
            name='created_by',
        ),
        migrations.AddField(
            model_name='recipe',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='recipe',
            name='cook_time',
            field=models.CharField(default='15 minutes', help_text='e.g. 15 minutes', max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recipe',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='recipes/'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients',
            field=models.TextField(default='15 minutes', help_text='List ingredients separated by commas or line breaks.'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recipe',
            name='prep_time',
            field=models.CharField(default='15 minutes', help_text='e.g. 10 minutes', max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recipe',
            name='review',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='servings',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=taggit.managers.TaggableManager(help_text="Add tags like 'Kenyan', 'Vegan', 'Spicy', etc.", through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='description',
            field=models.TextField(help_text='Short description or story behind the recipe.'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='instructions',
            field=models.TextField(help_text='Step-by-step cooking instructions.'),
        ),
        migrations.AlterField(
            model_name='recipe',
            name='title',
            field=models.CharField(max_length=200),
        ),
        migrations.AddField(
            model_name='recipe',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recipes', to='products.recipecategory'),
        ),
        migrations.DeleteModel(
            name='RecipeIngredient',
        ),
        migrations.DeleteModel(
            name='RecipeReview',
        ),
    ]
